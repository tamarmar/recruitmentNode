name: Nightly Notification
on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  test_and_create_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci  # Uses package-lock.json for consistent dependencies

      - name: Debug Working Directory
        run: pwd && ls -R .github

      - name: Run tests
        id: run_tests
        continue-on-error: true
        run: |
          npm install --save-dev jest
          
          # ✅ Run tests and capture both stdout and stderr
          npm test 2>&1 | tee test-results.log

          # ✅ Extract only failing tests
          grep -A 10 -E "✕|FAIL" test-results.log > failed-tests.log || echo "No failed tests" > failed-tests.log

          # ✅ Ensure the directory exists before writing the file
          mkdir -p .github/ISSUE_TEMPLATE
          
          # ✅ Fetch last commit authors (max 3 unique)
          authors=$(git log -n 5 --pretty=format:'%an' | sort | uniq | head -3 | sed 's/^/  - /')

          # ✅ Write issue content with proper formatting
          echo "---" > .github/ISSUE_TEMPLATE/nightly-report.md
          echo "title: \"Nightly Test Failures\"" >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo "labels: [\"bug\", \"automated\"]" >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo "assignees:" >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo "$authors" >> .github/ISSUE_TEMPLATE/nightly-report.md  # Auto-assign last commit authors
          echo "---" >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo "" >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo "## Nightly Test Failures" >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo "" >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo '```' >> .github/ISSUE_TEMPLATE/nightly-report.md
          cat failed-tests.log >> .github/ISSUE_TEMPLATE/nightly-report.md
          echo '```' >> .github/ISSUE_TEMPLATE/nightly-report.md


      - name: Check for Failed Tests
        id: check_failed_tests
        run: |
          if grep -E "✕|FAIL" failed-tests.log; then
            echo "TESTS_FAILED=true" >> $GITHUB_ENV
            echo "❌ Tests failed! Will create an issue."
          else
            echo "TESTS_FAILED=false" >> $GITHUB_ENV
            echo "✅ No test failures detected."
          fi

      - name: Debug - Print Failed Tests Log
        run: cat failed-tests.log

      - name: Create GitHub Issue (Only If Tests Failed)
        if: env.TESTS_FAILED == 'true'  # ✅ Creates an issue only if tests failed
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE/nightly-report.md


